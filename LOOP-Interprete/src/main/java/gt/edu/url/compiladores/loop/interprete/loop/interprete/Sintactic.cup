package gt.edu.url.compiladores.loop.interprete.loop.interprete;
import java_cup.runtime.Symbol;


terminal Integer entero;
terminal Double real;
terminal entrada,salida,boleano,identificador,coma,fin_de_linea,cadena,asignacion,
libre,tipo_ent,tipo_bol,tipo_real,tipo_cadena,newline,para, parb,salto,tabu,condicionales,IDmayu;

terminal principal,propiedades,metodos,retornar,operador_Logico,clase,clases,ifs,entoncess,
els,constru,desdes,whiles,sumarr,restarr,destruir,borrar,paquetes,porc,comentario,
comentarios,insta,pun,Parainstancias,instafr,aumento,opnum,opcadnum;

terminal tipo_ca2,tipo_ca3,tipo_ca4,tipo_ca5,tipo_ca6,tipo_ca7,tipo_ca8,cs,tipo_ca,corchetea,
corcheteb,llava,llavb, herencia,cominicio,comfin,comentariose,SIG,SIGme,haccer,SIGdiv,SIGpor,SIGex,
propu,propri,propro,propum,proprim,proprom,extension,estatico,
SI,SIme,and,or;

non terminal S,CLASES, codigoli,DECLARACION,DECENTERO,DECCADENA,DECBOLEAN,DECLAREAL,VARSECUE,finales,
nuevaslineas,MES,Mentrada,Msalida,TIP,escri,FUNCIONESS,CUERPOF,PARAMETROSE,PARAMETROSC,PARAMETROSB,
PARAMETROSR,TABULA,Linstancias,est,cond,seguimiento,FunE,Tipofun,datos,tipodatoss,CUERPOD,contructoDes;

non terminal tipodatosnombre,CUERPOFD,CUERPODES,Arrays,Numeros,NumerosRe,CadenasA,CadenaBO,TiposArr,TiposArr2,lineas;

non terminal reducciondetipoente,reducciondetiporeal,reducciondetipocadena,reducciondetipobol,
Compaentero,Compcadena,Compboo,Compreal, CuerpoClases, OpcionesClases, Propiedades,COMM,cuerpocomentarios;
non terminal SUBIR,Asignacionesvar,asi,CILCOS,INICIALES,CONDICIONES,INCREMENTOS,OPCIONESID;
non terminal cuerpociclos,ID,Whiles,ASIGNA,operacionesmatematicas,simbolosdeopera,TABID,CLASESA,
CONTENIDOCLASES,DEC,METODOSCLASES,tipodeclase,BIBLIOTECAS,sumores,CUERPORE,RECURSION,
operacionesnormales,operacionessimples,parentesisopera,OPERADORESLOGICOS,CANTIDADDEPARAMETROS,
reduce,Funcion,noaplica,comentariooleer,primero,Tipometodos,Tipopropied,CUERPODD,condd;

S ::=   codigoli |lineas|lineas S| codigoli S;
codigoli::= DECLARACION 
            | MES 
            |FUNCIONESS 
            |Linstancias
            |COMM   
            |CILCOS
            |ASIGNA
            |Whiles
            |CLASESA
            |BIBLIOTECAS   
            |primero;
            
lineas::=est
            |FunE
            |contructoDes
            |Arrays
            |TiposArr
            |newline ;

primero::=tipo_ent libre principal para tipo_cadena libre identificador parb finales
        |tipo_ent libre principal para parb finales;

/**
 * Todo lo de clases
 **/

CLASESA::= tipodeclase newline  salto CONTENIDOCLASES 
            |tipodeclase newline salto METODOSCLASES 
           |tipodeclase newline salto CONTENIDOCLASES METODOSCLASES
            |tipodeclase newline comentariooleer salto CONTENIDOCLASES 
            |tipodeclase newline comentariooleer salto METODOSCLASES 
           |tipodeclase newline comentariooleer salto CONTENIDOCLASES METODOSCLASES  ;
tipodeclase::= clase libre IDmayu 
                | clase libre IDmayu libre herencia libre IDmayu
                | IDmayu:n
                {:
                    System.out.println("Error en estructura de la clase:  "+n);
                :}
                | IDmayu:n libre herencia libre IDmayu
                {:
                    System.out.println("Error en estructura de la clase:  "+n);
                :} 
                   ;
Tipometodos::=propum|proprim|proprom;
METODOSCLASES::= metodos libre Tipometodos newline 
                |metodos libre Tipometodos newline salto salto DEC 
                |metodos libre Tipometodos newline salto METODOSCLASES
                |metodos newline salto salto DEC METODOSCLASES
                |Tipometodos newline salto salto DEC METODOSCLASES
                  {:
                    System.out.println("Error en estructura de metodos revisar: ");
                :}

                |metodos libre Tipometodos newline salto salto DEC METODOSCLASES
                |metodos:s newline salto salto DEC
                {:
                    System.out.println("Error especificar el tipo de metodo: "+s);
                :}
                |Tipometodos newline salto salto DEC
                {:
                    System.out.println("Error en estructura de metodos revisar: ");
                :};

Tipopropied::=propu|propri|propro;
CONTENIDOCLASES::=propiedades libre Tipopropied newline
                | propiedades libre Tipopropied newline salto CONTENIDOCLASES
                |propiedades:s newline salto salto DEC
                {:
                    System.out.println("Error especificar el tipo de propiedad "+s);
                :}
                |Tipopropied newline salto salto DEC 
                {:
                    System.out.println("Error en estructura de clases revisar" );
                :}
                |Tipopropied newline salto salto DEC CONTENIDOCLASES
                {:
                    System.out.println("Error en estructura de clases revisar");
                :}
                | propiedades libre Tipopropied newline salto salto DEC 
                | propiedades libre Tipopropied newline salto salto DEC CONTENIDOCLASES

                | propiedades:s newline salto salto DEC CONTENIDOCLASES;

DEC::=  DECLARACION |DECLARACION salto |  DECLARACION salto salto DEC| est;
/**
 * Area de biliotecas
 **/

BIBLIOTECAS::=paquetes libre extension newline; 



/**
 * Declaracion de variables y asignacion de las mismas
* compatbilidad
 **/
DECLARACION ::= DECENTERO
                | DECCADENA 
                | DECBOLEAN 
                | DECLAREAL ;

DECENTERO ::= reducciondetipoente VARSECUE finales 
            | estatico libre reducciondetipoente VARSECUE finales    
            |estatico libre reducciondetipoente VARSECUE libre asignacion libre Compaentero finales
            | reducciondetipoente VARSECUE libre asignacion libre Compaentero finales;
            
Compaentero::=entero | real | cadena |boleano;


DECCADENA ::= reducciondetipocadena VARSECUE finales
            |estatico libre reducciondetipocadena VARSECUE finales
             | estatico libre reducciondetipocadena VARSECUE libre asignacion libre cadena finales
             | reducciondetipocadena VARSECUE libre asignacion libre cadena finales;

DECBOLEAN ::= reducciondetipobol VARSECUE finales
            |estatico libre reducciondetipobol VARSECUE finales
            |estatico libre reducciondetipobol VARSECUE libre asignacion libre Compboo finales
             | reducciondetipobol VARSECUE libre asignacion libre Compboo finales;
Compboo::=entero | real | boleano;
DECLAREAL ::= reducciondetiporeal VARSECUE finales
            | estatico libre reducciondetiporeal VARSECUE finales
             | estatico libre reducciondetiporeal VARSECUE libre asignacion libre Compreal finales
             | reducciondetiporeal VARSECUE libre asignacion libre Compreal finales;

Compreal::=entero | real | cadena |boleano;

/**
 * Metodos de entrada y salida
 **/
MES::= Mentrada 
       | Msalida ;

Mentrada::= entrada libre TIP finales;

TIP::=  cadena coma libre TIP
      | entero coma libre TIP
      | real coma libre TIP
      | identificador coma libre TIP
      | identificador pun identificador para parb coma libre TIP
      | cadena:s 
        {:          
            System.out.println(s); 
        :}
      | entero:c
      {:          
            System.out.println(c); 
        :}
      | real:r
      {:          
            System.out.println(r); 
        :}
      | identificador:r
      {:          
          
            System.out.println(r); 
        :}
      | identificador:s pun:c identificador:t
        {:          
            System.out.println(s+""+c+""+t); 
                    :}
       | identificador:s pun:c identificador:t para:x parb:y
        {:          
            System.out.println(s+""+c+""+t+""+x+""+y); 
                    :} ;


Msalida::= salida libre identificador finales;

/**
 * comentarios
 **/

           
COMM::= comentario finales 
        |comentarios newline cuerpocomentarios comfin finales
        |comentarios finales ;

cuerpocomentarios ::= comentariose finales 
        | comentariose newline cuerpocomentarios;
/**
 * Funciones Sueltas
 **/
FUNCIONESS::= reducciondetipoente identificador  para CANTIDADDEPARAMETROS parb  CUERPOF finales
            | reducciondetipocadena identificador  para CANTIDADDEPARAMETROS  parb CUERPOF finales
            | reducciondetipobol identificador  para CANTIDADDEPARAMETROS parb  CUERPOF finales
            | reducciondetiporeal identificador  para CANTIDADDEPARAMETROS parb  CUERPOF finales
            | reducciondetipoente identificador  para  parb  CUERPOF newline
            | reducciondetipocadena identificador  para  parb CUERPOF newline
            | reducciondetipobol identificador  para  parb CUERPOF   newline
            | reducciondetiporeal identificador  para  parb  CUERPOF  newline
            
    
           ;


PARAMETROSE::= tipo_ent libre identificador coma PARAMETROSE
                | tipo_ent libre identificador;
                
PARAMETROSC::= tipo_cadena  libre identificador coma PARAMETROSC
                | tipo_cadena  libre identificador;
PARAMETROSB::=tipo_bol  libre identificador coma PARAMETROSB
                | tipo_bol  libre identificador;
PARAMETROSR::=tipo_real libre identificador coma PARAMETROSR
                | tipo_real libre identificador;
CANTIDADDEPARAMETROS::= PARAMETROSE  CANTIDADDEPARAMETROS
                    |PARAMETROSC CANTIDADDEPARAMETROS
                    |PARAMETROSB CANTIDADDEPARAMETROS
                    |PARAMETROSR CANTIDADDEPARAMETROS
                    |PARAMETROSE  
                    |PARAMETROSC 
                    |PARAMETROSB 
                    |PARAMETROSR ;
/**
 * el cuerpo de las funciones aun falta agreagar parametros
 **/
CUERPOF::= newline salto MES
           | newline TABULA retornar libre identificador libre simbolosdeopera libre identificador
           |newline TABULA retornar libre boleano
           |newline TABULA retornar libre identificador
            |newline TABULA retornar libre entero libre simbolosdeopera libre entero
            |newline TABULA retornar libre real libre simbolosdeopera real identificador
          | newline TABULA retornar libre entero
           | newline TABULA retornar  libre identificador sumores identificador para identificador libre sumores libre entero parb 
            | newline comentariooleer  TABULA retornar libre identificador libre simbolosdeopera libre identificador
           |newline comentariooleer  TABULA retornar libre boleano
            |newline comentariooleer  TABULA retornar libre entero libre simbolosdeopera libre entero
            |newline comentariooleer  TABULA retornar libre real libre simbolosdeopera real identificador
          |newline comentariooleer   TABULA retornar libre entero
           | newline comentariooleer  TABULA retornar  libre identificador sumores identificador para identificador libre sumores libre entero parb
          |newline TABULA retornar identificador pun identificador para datos parb finales
          
           ;
comentariooleer::=COMM |MES |est |MES comentariooleer |est comentariooleer |COMM comentariooleer  ;
sumores::= SIG|SIGme;


/**
 * instancias 
 **/


Linstancias::=  IDmayu libre identificador libre asignacion libre insta  IDmayu para parb finales
                |IDmayu libre identificador libre asignacion libre insta  IDmayu para datos parb finales
               |identificador libre asignacion libre insta  IDmayu para parb finales 
                |identificador pun identificador para parb finales 
                |IDmayu pun asignacion para parb finales 
               |borrar  identificador finales;
datos::= tipodatoss coma libre tipodatoss|tipodatoss|VARSECUE;

/**
 * Estructuras Selectivas
 **/

est::= ifs libre cond libre entoncess CUERPOF finales  seguimiento
        | ifs libre cond libre entoncess  CUERPOF finales  ;

seguimiento::=  els libre cond libre entoncess CUERPOF finales seguimiento
                |els libre cond libre entoncess CUERPOF finales
                |els CUERPOF  finales
              ;

cond::=  identificador libre simbolosdeopera libre entero 
        |entero libre simbolosdeopera libre identificador libre asignacion libre identificador;

/**
 * Estructuras Iterativas
 **/

CILCOS::= desdes libre INICIALES  whiles libre  OPCIONESID libre CONDICIONES libre OPCIONESID libre INCREMENTOS libre  entero libre haccer finales cuerpociclos
        | desdes libre INICIALES  whiles libre  OPCIONESID libre CONDICIONES libre OPCIONESID libre haccer finales cuerpociclos;
cuerpociclos::= TABULA Mentrada | Whiles;
CONDICIONES::= opcadnum|condicionales;
INCREMENTOS::= sumarr|restarr;
INICIALES::= identificador libre
            | tipo_ent libre identificador libre asignacion libre entero libre
            | ID asignacion libre entero libre;

ID::=identificador libre;
OPCIONESID::= identificador | entero;

/**
 * Whiles
 **/

Whiles::= haccer newline TABULA ASIGNA  whiles libre OPCIONESID libre CONDICIONES libre OPCIONESID  finales 
        | haccer libre COMM  TABULA ASIGNA  whiles libre OPCIONESID libre CONDICIONES libre OPCIONESID  finales 
        | haccer newline COMM  TABULA ASIGNA  whiles libre OPCIONESID libre CONDICIONES libre OPCIONESID  finales  ;





/**
 * Asignaciones
 **/

ASIGNA::=    identificador pun identificador asignacion operacionesmatematicas finales
            |identificador asignacion operacionesmatematicas finales
              |identificador libre asignacion libre operacionesmatematicas finales
              |identificador asignacion IDmayu para parb finales
              |identificador libre asignacion libre operacionesmatematicas finales  TABULA ASIGNA
              |identificador pun identificador asignacion operacionesmatematicas finales  TABULA ASIGNA
            | identificador asignacion operacionesmatematicas finales TABULA ASIGNA
             |identificador asignacion IDmayu para parb finales TABULA ASIGNA   
            |SUBIR;



operacionesmatematicas::= entero simbolosdeopera entero 
                           |identificador simbolosdeopera identificador
                           |entero simbolosdeopera  identificador
                             |identificador simbolosdeopera entero 
                             |SIGme identificador 
                            |SIGme entero 
                            | identificador
                            | entero 
                            |OPERADORESLOGICOS   
                            ;

OPERADORESLOGICOS::= identificador  and identificador or identificador
                    |identificador  or identificador and identificador
                    |identificador  and identificador 
                    |identificador  or identificador  ;
simbolosdeopera::=SIG|SIGme|SIGdiv|SIGpor|SIGex|porc;

/**
 * Funciones Especiales y recusion
 **/

FunE::= reducciondetipoente tipo_ca para reducciondetipocadena identificador:s parb finales
        {:int x= 0;
         int valor=0;
        try {
	valor= Integer.parseInt((String) s);
		x= 0;
	} catch (NumberFormatException nfe){
		x=1;
	}
          if(x==0){
            
		 System.out.println("Es un numero " +valor  ); 
	}else{
             System.out.println("No es un entero"); 
        }
        :}
        | reducciondetiporeal tipo_ca2 para reducciondetipocadena identificador:s parb finales
        {:int x= 0;
         Double valor=0.0;
        try {
	valor= Double.parseDouble((String) s);
		x= 0;
	} catch (NumberFormatException nfe){
		x=1;
	}
          if(x==0){
            
		 System.out.println("Es un numero " +valor  ); 
	}else{
             System.out.println("No es un numero real"); 
        }
        :}
        | reducciondetipobol tipo_ca3 para reducciondetipocadena identificador:s parb finales
          {:
            String compara=(String)s;
          if(compara.compareTo("verdadero")==0||compara.compareTo("falso")==0){
          	 System.out.println("Cambio exitoso"); 
	}else{
             System.out.println("no se puede realizar el cambio"); 
        }
        :}
        | reducciondetiporeal Tipofun para reducciondetiporeal identificador parb finales
        {:
            
          
          	 System.out.println("Operacion matematica"); 
	
        :}
        |tipo_ent identificador para tipo_ent libre identificador parb newline CUERPOF;
       
Tipofun::=tipo_ca4:s|tipo_ca5:s|tipo_ca6:s|tipo_ca7:s|tipo_ca8:s;
/**
 * Constructores y destructores 
 **/

contructoDes::=  constru para CANTIDADDEPARAMETROS parb newline CUERPOD
                | constru para  parb newline CUERPOD
                |  destruir para parb newline CUERPODES
                ;

CUERPODES::= TABULA borrar identificador finales; 

CUERPOD::=   TABULA retornar libre identificador pun identificador para identificador parb finales
           |TABULA identificador libre asignacion libre tipodatoss finales
            |TABULA identificador libre asignacion libre identificador finales
            |TABULA identificador libre asignacion libre tipodatoss finales CUERPOD
            |TABULA identificador libre asignacion libre identificador finales CUERPOD
            
         
            ;


/**
 * Arreglos
 **/



Arrays::= reducciondetipoente identificador corchetea entero corcheteb libre asignacion llava libre Numeros llavb finales
          |reducciondetiporeal identificador corchetea entero corcheteb libre asignacion llava libre NumerosRe llavb finales
          |reducciondetipocadena identificador corchetea entero corcheteb libre asignacion llava libre CadenasA llavb finales  
          |reducciondetipobol identificador corchetea entero corcheteb libre asignacion llava libre CadenaBO llavb finales;

// arreglos con inicialización de valores
Numeros::= entero libre| entero coma libre Numeros;
NumerosRe::= real libre| real coma libre NumerosRe;
CadenasA::= cadena libre| cadena coma libre CadenasA;
CadenaBO::= boleano libre| boleano coma libre CadenaBO;
/**
 * Asignacion de arreglos
 **/

TiposArr::= reducciondetipoente identificador corchetea corcheteb finales
        |reducciondetiporeal  identificador corchetea corcheteb finales
        |reducciondetipobol  identificador corchetea corcheteb finales
        |reducciondetipocadena  identificador corchetea corcheteb finales
        | identificador corchetea entero corcheteb libre asignacion libre tipodatoss finales
        | identificador libre asignacion libre insta tipo_ent corchetea entero corcheteb finales
        | identificador libre asignacion libre insta tipo_cadena corchetea entero corcheteb finales
        | identificador libre asignacion libre insta tipo_real corchetea entero corcheteb finales
        | identificador libre asignacion libre insta tipo_bol corchetea entero corcheteb finales;

/**
 * incrementos y decrementos
 **/

SUBIR::= identificador asignacion SI identificador finales 
        |identificador asignacion SI entero finales     
        |identificador asignacion  identificador SIme finales 
        |identificador asignacion entero SIme finales;


/**
 * * Reducción tipos
 **/

reducciondetipoente::= tipo_ent libre;
reducciondetiporeal::= tipo_real libre;
reducciondetipobol::=tipo_bol libre;
reducciondetipocadena::= tipo_cadena libre;


/**
 * Secuencias de variables y finales de líneas, incluye nueva línea para finales lleva incluido el ; y newline solo salto
 **/


VARSECUE  ::= identificador coma VARSECUE | identificador;

finales::= fin_de_linea newline| newline;


TABULA::=salto TABULA|salto;
tipodatoss::=entero 
            | cadena   
            |boleano
            | real;
