package gt.edu.url.compiladores.loop.interprete.loop.interprete;
import java_cup.runtime.Symbol;


terminal Integer entero;
terminal Double real;
terminal entrada,salida,boleano,identificador,coma,fin_de_linea,cadena,asignacion,
libre,tipo_ent,tipo_bol,tipo_real,tipo_cadena,newline,para, parb,salto,tabu,condicionales,IDmayu;

terminal principal,propiedades,metodos,retornar,operador_Logico,clase,clases,ifs,entoncess,
els,constru,desdes,whiles,sumarr,restarr,destruir,borrar,paquetes,porc,comentario,
comentarios,insta,pun,Parainstancias,instafr,aumento,opnum,opcadnum;

terminal tipo_ca2,tipo_ca3,tipo_ca4,tipo_ca5,tipo_ca6,tipo_ca7,tipo_ca8,cs,tipo_ca,corchetea,
corcheteb,llava,llavb, herencia,cominicio,comfin,comentariose,SIG,SIGme,haccer,SIGdiv,SIGpor,SIGex,
propu,propri,propro,propum,proprim,proprom,extension,estatico,
SI,SIme;

non terminal S,CLASES, codigoli,DECLARACION,DECENTERO,DECCADENA,DECBOLEAN,DECLAREAL,VARSECUE,finales,
nuevaslineas,MES,Mentrada,Msalida,TIP,escri,FUNCIONESS,CUERPOF,PARAMETROSE,PARAMETROSC,PARAMETROSB,
PARAMETROSR,TABULA,Linstancias,est,cond,seguimiento,FunE,Tipofun,datos,tipodatoss,CUERPOD,contructoDes;

non terminal tipodatosnombre,CUERPOFD,CUERPODES,Arrays,Numeros,NumerosRe,CadenasA,CadenaBO,TiposArr,TiposArr2,lineas;

non terminal reducciondetipoente,reducciondetiporeal,reducciondetipocadena,reducciondetipobol,
Compaentero,Compcadena,Compboo,Compreal, CuerpoClases, OpcionesClases, Propiedades,COMM,cuerpocomentarios;
non terminal SUBIR,Asignacionesvar,asi,CILCOS,INICIALES,CONDICIONES,INCREMENTOS,OPCIONESID;
non terminal cuerpociclos,ID,Whiles,ASIGNA,operacionesmatematicas,simbolosdeopera,TABID,CLASESA,
CONTENIDOCLASES,DEC,METODOSCLASES,tipodeclase,BIBLIOTECAS,sumores,CUERPORE;

S ::=   codigoli |lineas|lineas S| codigoli S;
codigoli::= DECLARACION 
            | MES 
            |FUNCIONESS 
            |Linstancias
            |COMM   
            |CILCOS
            |ASIGNA
            |Whiles
            |CLASESA
            |BIBLIOTECAS;

lineas::=est
            |FunE
            |contructoDes
            |Arrays
            |TiposArr
            |newline;


/**
 * Todo lo de clases
 **/

CLASESA::= tipodeclase newline salto CONTENIDOCLASES METODOSCLASES;
tipodeclase::= clase libre IDmayu | clase libre IDmayu libre herencia libre IDmayu;
METODOSCLASES::=metodos libre propum newline salto salto DEC
                metodos libre proprim newline salto salto DEC 
                metodos libre proprom newline salto salto DEC
               |metodos libre propum newline salto salto DEC
                metodos libre proprim newline salto salto DEC 
                |metodos libre propum newline salto salto DEC
                metodos libre proprom newline salto salto DEC    
               |metodos libre proprim newline salto salto DEC 
                metodos libre proprom newline salto salto DEC 
                |metodos libre propum newline salto salto DEC
                |metodos libre proprim newline salto salto DEC 
                |metodos libre proprom newline salto salto DEC;


CONTENIDOCLASES::=propiedades libre propu newline salto salto DEC 
                propiedades libre propri newline salto salto DEC 
                propiedades libre propro newline salto salto DEC
            |propiedades libre propu newline salto salto DEC 
                propiedades libre propri newline salto salto DEC 
            |    propiedades libre propu newline salto salto DEC 
                propiedades libre propro newline salto salto DEC  
                |propiedades libre propri newline salto salto DEC 
                propiedades libre propro newline salto salto DEC
|propiedades libre propu newline salto salto DEC 
|propiedades libre propri newline salto salto DEC 
| propiedades libre propro newline salto salto DEC
               ;   

DEC::=  DECLARACION |DECLARACION salto |  DECLARACION salto salto DEC;
/**
 * Area de biliotecas
 **/

BIBLIOTECAS::=paquetes libre extension newline; 



/**
 * Declaracion de variables y asignacion de las mismas
* compatbilidad
 **/
DECLARACION ::= DECENTERO
                | DECCADENA 
                | DECBOLEAN 
                | DECLAREAL ;

DECENTERO ::= reducciondetipoente VARSECUE finales 
            | estatico libre reducciondetipoente VARSECUE finales    
            |estatico libre reducciondetipoente VARSECUE libre asignacion libre Compaentero finales
            | reducciondetipoente VARSECUE libre asignacion libre Compaentero finales;
            
Compaentero::=entero | real | cadena |boleano;


DECCADENA ::= reducciondetipocadena VARSECUE finales
            |estatico libre reducciondetipocadena VARSECUE finales
             | estatico libre reducciondetipocadena VARSECUE libre asignacion libre cadena finales
             | reducciondetipocadena VARSECUE libre asignacion libre cadena finales;

DECBOLEAN ::= reducciondetipobol VARSECUE finales
            |estatico libre reducciondetipobol VARSECUE finales
            |estatico libre reducciondetipobol VARSECUE libre asignacion libre Compboo finales
             | reducciondetipobol VARSECUE libre asignacion libre Compboo finales;
Compboo::=entero | real | boleano;
DECLAREAL ::= reducciondetiporeal VARSECUE finales
            | estatico libre reducciondetiporeal VARSECUE finales
             | estatico libre reducciondetiporeal VARSECUE libre asignacion libre Compreal finales
             | reducciondetiporeal VARSECUE libre asignacion libre Compreal finales;

Compreal::=entero | real | cadena |boleano;

/**
 * Metodos de entrada y salida
 **/
MES::= Mentrada 
       | Msalida ;

Mentrada::= entrada libre TIP finales;

TIP::=  cadena coma libre TIP
      | entero coma libre TIP
      | real coma libre TIP
      | identificador coma libre TIP
      | cadena 
      | entero
      | real
      | identificador
      | identificador pun identificador;


Msalida::= salida libre identificador finales;

/**
 * comentarios
 **/

           
COMM::= comentario finales 
        |comentarios newline cuerpocomentarios comfin finales
        |comentarios finales ;

cuerpocomentarios ::= comentariose finales 
        | comentariose newline cuerpocomentarios;
/**
 * Funciones 
 **/
FUNCIONESS::= reducciondetipoente identificador  para PARAMETROSE parb  CUERPOF finales
            | reducciondetipocadena identificador  para PARAMETROSC  CUERPOF finales
            | reducciondetipobol identificador  para PARAMETROSB parb  CUERPOF finales
            | reducciondetiporeal identificador  para PARAMETROSR parb  CUERPOF finales;
 
PARAMETROSE::= reducciondetipoente identificador coma PARAMETROSE
                | reducciondetipoente identificador;
PARAMETROSC::= tipo_cadena  libre identificador coma PARAMETROSC
                | tipo_cadena  libre identificador;
PARAMETROSB::=tipo_bol  libre identificador coma PARAMETROSB
                | tipo_bol  libre identificador;
PARAMETROSR::=reducciondetiporeal identificador coma PARAMETROSR
                | reducciondetiporeal identificador;

/**
 * el cuerpo de las funciones aun falta agreagar parametros
 **/
CUERPOF::= newline TABULA retornar libre identificador libre opnum libre identificador
          | newline TABULA retornar entero
           | newline TABULA retornar identificador sumores identificador para identificador libre sumores libre entero parb ;
sumores::= SIG|SIGme;


/**
 * instancias 
 **/


Linstancias::=  IDmayu libre identificador libre asignacion libre insta  IDmayu para parb finales
                |IDmayu libre identificador libre asignacion libre insta  IDmayu para datos parb finales
               |identificador libre asignacion libre insta  IDmayu para parb finales 
               |borrar  identificador finales;
datos::= tipodatoss coma libre tipodatoss;

/**
 * Estructuras Selectivas
 **/

est::= ifs cond libre entoncess CUERPOF finales seguimiento
        | ifs cond libre entoncess CUERPOF finales  ;

seguimiento::=  els cond libre entoncess CUERPOF finales seguimiento
                |els cond libre entoncess CUERPOF finales
              ;

cond::= entero libre opnum libre entero
        |identificador libre opnum libre entero
        |entero libre opnum libre identificador
        |identificador libre opnum libre identificador;

/**
 * Estructuras Iterativas
 **/

CILCOS::= desdes libre INICIALES  whiles libre  OPCIONESID libre CONDICIONES libre OPCIONESID libre INCREMENTOS libre  entero libre haccer finales cuerpociclos
        | desdes libre INICIALES  whiles libre  OPCIONESID libre CONDICIONES libre OPCIONESID libre haccer finales cuerpociclos;
cuerpociclos::= TABULA Mentrada;
CONDICIONES::= opcadnum|condicionales;
INCREMENTOS::= sumarr|restarr;
INICIALES::= identificador libre
            | tipo_ent libre identificador libre asignacion libre entero libre
            | ID asignacion libre entero libre;

ID::=identificador libre;
OPCIONESID::= identificador | entero;

/**
 * Whiles
 **/

Whiles::= haccer newline TABULA ASIGNA  whiles libre OPCIONESID libre CONDICIONES libre OPCIONESID  finales;

/**
 * recursividad
 **/

RECURSION::= tipo_ent identificador para tipo_ent libre identificador parb newline CUERPORE;
CUERPORE::=  CUERPOF;



/**
 * Asignaciones
 **/

ASIGNA::=    identificador pun identificador asignacion operacionesmatematicas finales
            |identificador asignacion operacionesmatematicas finales
              |identificador libre asignacion libre operacionesmatematicas finales
              |identificador libre asignacion libre operacionesmatematicas finales  TABULA ASIGNA
              |identificador pun identificador asignacion operacionesmatematicas finales  TABULA ASIGNA
            | identificador asignacion operacionesmatematicas finales TABULA ASIGNA
            |SUBIR;


operacionesmatematicas::= entero simbolosdeopera entero 
                           |identificador simbolosdeopera identificador
                           |entero simbolosdeopera identificador
                             |identificador simbolosdeopera entero 
                             |SIGme identificador 
                            |SIGme entero 
                            | identificador
                            | entero    ;

simbolosdeopera::=SIG|SIGme|SIGdiv|SIGpor|SIGex;

/**
 * Funciones Especiales
 **/

FunE::= reducciondetipoente tipo_ca para reducciondetipocadena identificador parb finales
        | reducciondetipoente tipo_ca2 para reducciondetipocadena identificador parb finales
        | reducciondetipoente tipo_ca3 para reducciondetipocadena identificador parb finales
        | reducciondetiporeal Tipofun para reducciondetiporeal identificador parb finales;

Tipofun::=tipo_ca4|tipo_ca5|tipo_ca6|tipo_ca7|tipo_ca8;

/**
 * Construcotres y destructores
 **/

contructoDes::= constru para tipodatosnombre libre identificador coma libre tipodatosnombre libre identificador parb newline CUERPOD 
                |   destruir para parb newline CUERPODES;
CUERPOD::=  ASIGNA;

CUERPODES::= TABULA borrar identificador finales; // agregar aun mas parametros


/**
 * Arreglos
 **/



Arrays::= reducciondetipoente identificador corchetea entero corcheteb libre asignacion llava libre Numeros llavb finales
          |reducciondetiporeal identificador corchetea entero corcheteb libre asignacion llava libre NumerosRe llavb finales
          |reducciondetipocadena identificador corchetea entero corcheteb libre asignacion llava libre CadenasA llavb finales  
          |reducciondetipobol identificador corchetea entero corcheteb libre asignacion llava libre CadenaBO llavb finales;

// arreglos con inicializacion de valores
Numeros::= entero libre| entero coma libre Numeros;
NumerosRe::= real libre| real coma libre NumerosRe;
CadenasA::= cadena libre| cadena coma libre CadenasA;
CadenaBO::= boleano libre| boleano coma libre CadenaBO;
/**
 * Asignacion de arreglos
 **/

TiposArr::= reducciondetipoente identificador corchetea corcheteb finales
        |reducciondetiporeal  identificador corchetea corcheteb finales
        |reducciondetipobol  identificador corchetea corcheteb finales
        |reducciondetipocadena  identificador corchetea corcheteb finales
        | identificador corchetea entero corcheteb libre asignacion libre tipodatoss finales
        | identificador libre asignacion libre insta tipodatosnombre corchetea entero corcheteb finales;

/**
 * incrementos y decrementos
 **/

SUBIR::= identificador asignacion SI identificador finales 
        |identificador asignacion SI entero finales     
        |identificador asignacion  identificador SIme finales 
        |identificador asignacion entero SIme finales;


/**
 * Reduccion tipo entero
 **/

reducciondetipoente::= tipo_ent libre;
reducciondetiporeal::= tipo_real libre;
reducciondetipobol::=tipo_bol libre;
reducciondetipocadena::= tipo_cadena libre;
/**
 * Suencias de variables y finales de lines, incluye nueva linea 
 * para finales lleva incluido el ; y new linew solo salto
 **/

VARSECUE  ::= identificador coma VARSECUE | identificador;

finales::= fin_de_linea newline| newline;


TABULA::=salto TABULA|salto;
tipodatoss::=entero 
            | cadena   
            |boleano
            | real;
tipodatosnombre::=tipo_ent 
            |tipo_cadena   
            |tipo_bol 
            | tipo_real;

