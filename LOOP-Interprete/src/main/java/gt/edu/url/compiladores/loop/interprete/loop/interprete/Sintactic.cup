package gt.edu.url.compiladores.loop.interprete.loop.interprete;
import java_cup.runtime.Symbol;


terminal Integer entero;
terminal Double real;
terminal entrada,salida,boleano,identificador,coma,fin_de_linea,cadena,asignacion,
libre,tipo_ent,tipo_bol,tipo_real,tipo_cadena,newline,para, parb,salto,tabu,IDmayu;

terminal principal,propiedades,metodos,retornar,operadores,operador_Logico,clases,ifs,entoncess,
els,constru,desdes,whiles,sumarr,restarr,haccer,destruir,borrar,paquetes,porc,comentario,
comentarios,insta,punto;

non terminal S,codigoli,DECLARACION,DECENTERO,DECCADENA,DECBOLEAN,DECLAREAL,VARSECUE,finales,
nuevaslineas,MES,Mentrada,Msalida,TIP,escri,FUNCIONESS,CUERPOF,PARAMETROSE,PARAMETROSC,PARAMETROSB,
PARAMETROSR,TABULA,Linstancias;

S ::=   codigoli | codigoli S
        ;
codigoli::= DECLARACION | MES |FUNCIONESS |Linstancias;

/**
 * Declaracion de variables y asignacion de las mismas
 **/
DECLARACION ::= DECENTERO
                | DECCADENA 
                | DECBOLEAN 
                | DECLAREAL ;

DECENTERO ::= tipo_ent libre VARSECUE finales 
            | tipo_ent libre VARSECUE libre asignacion libre entero finales;

DECCADENA ::= tipo_cadena libre VARSECUE finales
             | tipo_cadena libre VARSECUE libre asignacion libre cadena finales;

DECBOLEAN ::= tipo_bol libre VARSECUE finales
             | tipo_bol libre VARSECUE libre asignacion libre boleano finales;

DECLAREAL ::= tipo_real libre VARSECUE finales
             | tipo_real libre VARSECUE libre asignacion libre real finales;

/**
 * Metodos de entrada y salida
 **/
MES::= Mentrada 
       | Msalida ;

Mentrada::= entrada libre TIP finales ;

TIP::=  cadena coma libre TIP
      |entero coma libre TIP
      | real coma libre TIP
      |identificador coma libre TIP
      |cadena 
      |entero
      | real
      |identificador;


Msalida::= salida libre identificador finales;


/**
 * Funciones 
 **/
FUNCIONESS::= tipo_ent libre identificador  para PARAMETROSE parb  CUERPOF finales
            |  tipo_cadena  libre identificador  para PARAMETROSC  CUERPOF finales
            | tipo_bol libre identificador  para PARAMETROSB parb  CUERPOF finales
            | tipo_real libre identificador  para PARAMETROSR parb  CUERPOF finales;
 
PARAMETROSE::= tipo_ent libre identificador coma PARAMETROSE
                | tipo_ent libre identificador;
PARAMETROSC::= tipo_cadena  libre identificador coma PARAMETROSC
                | tipo_cadena  libre identificador;
PARAMETROSB::=tipo_bol  libre identificador coma PARAMETROSB
                | tipo_bol  libre identificador;
PARAMETROSR::=tipo_real libre identificador coma PARAMETROSR
                | tipo_real libre identificador;

/**
 * el cuerpo de las funciones aun falta agreagar parametros
 **/
CUERPOF::= newline TABULA retornar libre identificador libre operadores libre identificador;



/**
 * instancias 
 **/


Linstancias::=  IDmayu libre identificador libre asignacion libre insta libre IDmayu para parb newline;






/**
 * Suencias de variables y finales de lines, incluye nueva linea 
 * para finales lleva incluido el ; y new linew solo salto
 **/

VARSECUE  ::= identificador coma VARSECUE | identificador;

finales::= fin_de_linea newline| newline;


TABULA::=salto TABULA|salto;